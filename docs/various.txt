Git in Git GUI (Tortoise git):
Windows git: http://code.google.com/p/msysgit/downloads/list?can=3
GUI: https://code.google.com/p/tortoisegit/

WHATWG's HTML spec, must-read: http://www.whatwg.org/specs/web-apps/current-work/
WHATWG-jeva priporočila on how to read shi*loads of this stuff: http://www.whatwg.org/specs/web-apps/current-work/multipage/introduction.html#how-to-read-this-specification
quote: This specification should be read like all other specifications. First, it should be read cover-to-cover, multiple times. Then, it should be read backwards at least once. Then it should be read by picking random sections from the contents list and following all the cross-references.

Supposed ultimate Javascript reference: Flanagan's JavaScript: The Definitive Guide (6th ed), 1k pages
Highly recommended: JavaScript, The Good Parts
Supposed ultimate Python reference: Beazley's Python Essential Reference (3rd ed)

Could be interesting, vsega po malem - Google Code University: http://code.google.com/edu/introductory_courses.html

Koncepti razvoja programske opreme
* http://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93controller
* http://en.wikipedia.org/wiki/Model_View_ViewModel
* http://en.wikipedia.org/wiki/Model-view-presenter

Knjige
1) Janez Demšar: Python za programerje: http://www.shrani.si/f/1H/uz/2bWMCQ05/2/pythonzaprogramerje.pdf

Potrebno je nataviti se poti, da lahko poganjate stvari:
export PATH=$PATH:/bin:/usr/bin:/sbin:/usr/sbin

GIT komande
- add FILENAME (git add README)
- status
- diff
- commit -a       // naredi commit cimveckrat
- push

- http://eagain.net/articles/git-for-computer-scientists/     <- Kratka predstavitev :)
- Django Hello World aplikacija

Mac OS X inštalacija:
cd ~
sudo easy_install pip
sudo easy_install virtualenv
virtualenv --no-site-packages env_piplmesh <-- ce to ne dela, moras namestiti Xcode, narediti developer account, in v njih pod preferences > downloads > namesti Command line tools
cd env_piplmesh/
source env_piplmesh/bin/activate
pip install Django  //Pozor, ♦nasnami znotraj direktorija


DEBIAN inštalacija:
apt-get install python python-pip
pip install virtualenv
virtualenv --no-site-packages env_piplmesh
cd env_piplmesh/
source env_piplmesh/bin/activate
pip install Django  //Pozor, nasnami znotraj direktorija cd..

Razlaga namestitve virtualenv in django + ustvarjanje novega projekta: http://♦ww http://www.youtuapt-get pycharmbe.com/watch?v=IIOghLp33BA&feature=relatedw.youtuapt-get pycharmbe.com/watch?v=IIOghLp33BA&feature=related


Windows inštalacija:
1. Python 2.7
2. Git (http://code.google.com/p/msysgit/downloads/list) ter tortoisegit - GUI (https://code.google.com/p/tortoisegit/downloads/list)
3. Greš recimo na C:\ pa das desni klik in GitClone. Na GitHubu pogledas svoj PiplMesh (skupina 3. je to recimo https://github.com/AeroWave/PiplMesh) ter poiščeš svoj URL link do git-a
4. Daš HTTP pa skopiraš tisti link v Git clone pod Url, nastaviš na Web. Press OK to continue.
5. Download http://pypi.python.org/pypi/setuptools#windows
6. Add c:\Python27\Scripts to the Windows path
7. Open a new (!) DOS prompt with Admin rights. From there (c:\Python27\Tools\Scripts) run easy_install pip in easy_install virtualenv
8. greš pod direktorij kjer si dol snel git file
9. poženeš ukaze: virtualenv --no-site-packages env_piplmesh
10. greš v mapo env_piplmesh/
11. aktiviraš: scripts\activatel
12. znotraj okolja: pip install Django



Django install (windows)

1. pip install Django
2. test: python import django print django.get_version()
3. django-admin.py startproject testproject (pokličeš v env direktoriju), če ne dela:> python D:\FRI\IPRI\test\env_test\Lib\site-packages\django\bin\django-admin.py startproject testproject
4. cd testproject
5.python manage.py runserver
6. run http://127.0.0.1:8000/ :)



Predavanja
Interesting stuff https://www.evernote.com/pub/ioshints/scaleMatters

WANem
http://packetlife.net/blog/2011/jan/12/emulating-wans-wanem

Django MVC:
view = controler
controler = view
model = model


PyCharm
http://dl.dropbox.com/u/3818654/licenca.txt


- cut >---------------------------------------
User Name: Faculty of Computer and Information Science, University of Ljubljana

===== LICENSE BEGIN =====
430334-11102011
00002RQAN!ijPMb"wPxfL5eBQN3X7C
yT!B98hVhSQPr8kxSvepWYghVpWHbk
omQ"1SlHGLKmWUBOVlM5Nw7GcrDL7K
===== LICENSE END =====
-< cut ---------------------------------------


Povzetek vaj
1) CSS compass - http://compass-style.org/ (informativno, tega ne bomo uporabljali)

Code review
1) Drži se stila, ki je že v repozitoriju
2) Ne spreminjaj fulltitle niza
3) Class based view - https://docs.djangoproject.com/en/dev/topics/class-based-views/

Mogoče to: http://google-styleguide.googlecode.com/svn/trunk/pyguide.html

Rewrites:
http://www.joelonsoftware.com/articles/fog0000000027.html

top  - merjenje resourcou na linuxu

mytop - merjenje db loada.

apc (alternative php cache) - zazeljeno na vsakem php serverju

http://dev.wlan-si.net/wiki/GSoC/Ideas
http://orange.biolab.si/trac/wiki/GSoC/Ideas

https://github.com/django-mptt/django-mptt
http://www.sitepoint.com/hierarchical-data-database/

Kaj pa ce bi  kaj takega dokoncal/dopolnili: https://common.tnode.com/pad/p/howtogithub
SUPER IDEJA!

git pull
git checkout -b branch_name

git push

git add <conflict filename after resolve>
git commit -a

Za OSX mongo:

http://www.mongodb.org/display/DOCS/Quickstart+OS+X

poženeš pa potem z ukazom mongodb
mongod --dbpath YourPathToData


Prerequisites
-------------

In addition to Python_ and a Django-supported_ relation database system the
following is required on the system to run OrangeX:

* Python virtualenv_ package
* Python pip_ package (1.0+)
* MongoDB_ (2.0+)
* RabbitMQ_ (2.7+)
* Memcached_ (1.4+)

.. _Python: http://python.org/
.. _Django-supported: https://docs.djangoproject.com/en/1.3/ref/databases/
.. _virtualenv: http://pypi.python.org/pypi/virtualenv
.. _pip: http://pypi.python.org/pypi/pip
.. _MongoDB: http://www.mongodb.org/
.. _RabbitMQ: http://www.rabbitmq.com/
.. _Memcached: http://memcached.org/

Other prerequisites (Python packages) are installed later.

Getting Source
--------------

Vaje, 25.4.2012

Nujno odpiraj spletno stran na naslovu: 127.0.0.1:8000, ne localhost ali karkoli drugega!

JSON View
Uporaben dodatek za Firefox: https://addons.mozilla.org/sl/firefox/addon/jsonview/

Shema za Piplmesh
http://shrani.si/f/2E/Br/BMBbAxj/shemapiplmesh.png

Tabla: http://shrani.si/f/3E/xp/1aWCpvUJ/1/img20120516132543.jpg

POST preko Restful api-ja (cookie zamenjaj s svojim (poglej v brskalnik)

curl -D - --cookie "sessionid=5cd7c56625d6139af7539f56d59e141e" -H "Content-type: application/json" -X POST -d'{"message": "Test pos12314t."}' http://127.0.0.1:8000/api/v1/post/

dodajanje commentov  (link dobis vrnjen ko naredis post)

curl -D - --cookie "sessionid=5cd7c56625d6139af7539f56d59e141e" -H "Content-type: application/json" -X POST -d'{"message": "komentar."}' http://127.0.0.1:8000/api/v1/post/4fbcb1dd5c46fa265c00000d/comments/

dodajanje attachmentov (link dobis vrnjen ko naredis post)

curl -D - --cookie "sessionid=5cd7c56625d6139af7539f56d59e141e" -H "Content-type: application/json; type=link" -X POST -d'{"link_url": "http://youtube.com","link_caption":"dsfa"}' http://127.0.0.1:8000/api/v1/post/4fbcb1dd5c46fa265c00000d/attachments/

GET preko restful api-ja

 curl http://127.0.0.1:8000/api/v1/post/


--------------------------------

Windows 7 in PiplMesh:

Torej vsem tisim, ki ne morete postaviti strežnika:

1. Narediš novo mapo
2. V tej mapi kloniraš oba repozitorija (Desn click -> clone)
-http://github.com/mitar/django-mongodbforms.git
-http://github.com/mitar/django-mongogeneric.git
3. Zaženeš bash
4. Premakneš se na drug branch (mislim da je) -> git checkout bugfixes
5. python setup.py install
6. postopek ponoviš še v drugi mapi
7. zapreš bash in odpreš cmd
8. env_piplmesh -> scripts\activate
9.1 python manage.py celerybeat
9.2 python manage.py celeryd --loglevel=info --concurrency=1 --maxtasksperchild=10
10. python manage.py runpushserver
11. python manage.py runserver


Google datacenter info:

http://www.google.com/about/datacenters/index.html

pip freeze > requirements.txt
pip install -r requirements.txt

